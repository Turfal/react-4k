{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","args","e","message"],"sources":["C:/Users/nivan/OneDrive/Рабочий стол/react_project.github.io-master/src/hooks/useFetching.js"],"sourcesContent":["import { useState } from 'react'\n\nexport const useFetching = callback => {\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [error, setError] = useState('')\n\n\tconst fetching = async (...args) => {\n\t\ttry {\n\t\t\tsetIsLoading(true)\n\t\t\tawait callback(...args)\n\t\t} catch (e) {\n\t\t\tsetError(e.message)\n\t\t} finally {\n\t\t\tsetIsLoading(false)\n\t\t}\n\t}\n\n\treturn [fetching, isLoading, error]\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAK;IACnC,IAAI;MACHJ,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,GAAGO,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACXH,QAAQ,CAACG,CAAC,CAACC,OAAO,CAAC;IACpB,CAAC,SAAS;MACTN,YAAY,CAAC,KAAK,CAAC;IACpB;EACD,CAAC;EAED,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACpC,CAAC;AAAAH,EAAA,CAhBYF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}