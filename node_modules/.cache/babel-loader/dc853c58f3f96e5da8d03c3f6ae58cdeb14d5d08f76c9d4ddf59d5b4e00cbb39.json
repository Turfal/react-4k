{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nivan\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react_project.github.io-master\\\\src\\\\pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/App.css';\nimport { usePosts } from '../hooks/usePosts';\nimport PostList from '../components/PostList';\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport PostService from '../API/PostService';\nimport { useFetching } from '../hooks/useFetching';\nimport { getPageCount } from '../util/pages';\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n    fetchPosts(limit, page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"GET POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 30\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(Posts, \"XrMkDvOk0hWUVOpi8LQH3RL0vi4=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","usePosts","PostList","PostForm","PostFilter","MyModal","MyButton","PostService","useFetching","getPageCount","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","limit","setLimit","page","setPage","totalPages","setTotalPages","sortedAndSearchedPosts","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","visible","setVisible","create","margin","remove","title","_c","$RefreshReg$"],"sources":["C:/Users/nivan/OneDrive/Рабочий стол/react_project.github.io-master/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../styles/App.css'\nimport { usePosts } from '../hooks/usePosts'\nimport PostList from '../components/PostList'\nimport PostForm from '../components/PostForm'\nimport PostFilter from '../components/PostFilter'\nimport MyModal from '../components/UI/MyModal/MyModal'\nimport MyButton from '../components/UI/button/MyButton'\nimport PostService from '../API/PostService'\nimport { useFetching } from '../hooks/useFetching'\nimport { getPageCount } from '../util/pages'\nimport Pagination from '../components/UI/pagination/Pagination'\n\nfunction Posts() {\n\tconst [posts, setPosts] = useState([])\n\tconst [filter, setFilter] = useState({ sort: '', query: '' })\n\tconst [modal, setModal] = useState(false)\n\tconst [limit, setLimit] = useState(10)\n\tconst [page, setPage] = useState(1)\n\tconst [totalPages, setTotalPages] = useState(0)\n\tconst sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n\n\tconst [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n\t\tconst response = await PostService.getAll(limit, page)\n\t\tsetPosts(response.data)\n\t\tconst totalCount = response.headers['x-total-count']\n\t\tsetTotalPages(getPageCount(totalCount, limit))\n\t})\n\n\tuseEffect(() => {\n\t\tfetchPosts()\n\t}, [page])\n\n\tconst createPost = newPost => {\n\t\tsetPosts([...posts, newPost])\n\t}\n\n\tconst removePost = post => {\n\t\tsetPosts(posts.filter(p => p.id !== post.id))\n\t}\n\n\tconst changePage = page => {\n\t\tsetPage(page)\n\t\tfetchPosts(limit, page)\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<button onClick={fetchPosts}>GET POSTS</button>\n\t\t\t<MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)}>\n\t\t\t\tСоздать пользователя\n\t\t\t</MyButton>\n\t\t\t<MyModal visible={modal} setVisible={setModal}>\n\t\t\t\t<PostForm create={createPost} />\n\t\t\t</MyModal>\n\t\t\t<hr style={{ margin: '15px 0' }} />\n\t\t\t<PostFilter filter={filter} setFilter={setFilter} />\n\n\t\t\t{postError && <h1>Произошла ошибка ${postError}</h1>}\n\t\t\t{isPostsLoading ? (\n\t\t\t\t<h1>Идет загрузка...</h1>\n\t\t\t) : (\n\t\t\t\t<PostList\n\t\t\t\t\tremove={removePost}\n\t\t\t\t\tposts={sortedAndSearchedPosts}\n\t\t\t\t\ttitle='Посты про JS'\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<Pagination page={page} changePage={changePage} totalPages={totalPages} />\n\t\t</div>\n\t)\n}\n\nexport default Posts\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}